#!/bin/bash
# Script written by TEH on 17 March, 2021 to create retrofit taxonomy mappping files for national seismic risk model. Assumes that a baseline file already exists.
# To be run from model-inputs/exposure/general-building-stock.

#############################
# Required User Input
#############################
EXPO="../../exposure/BldgExpRef_CA_master_v3p1.csv" #Current master exposure file
#############################
# Optional User Input
#############################
BASELINE="./CanSRM1_TaxMap_b0.csv" #Name of New Baseline File To Be Made
R1="./CanSRM1_TaxMap_r1.csv" #Name of New Standard Retrofit File To Be Made
R2="./CanSRM1_TaxMap_r2.csv" #Name of New Optimistic Retrofit File To Be Made
#############################


### Grab all taxonomies in exposure
awk -F',' '$8!~"taxonomy" {print $8}' $EXPO | sort | uniq > temp.txt
header="taxonomy,conversion,weight"
### Deprecated - grab all taxonomies from previous mapping file
#OLDFILE="../../exposure/BldgExp_CA_v2p5p3_TaxLUT_b0.csv" #Existing Baseline File (deprecated, just keeping here in case you want to check)
#header=`head -1 $OLDFILE` #grab header line from baseline taxonomy mapping file
#awk -F',' '$1!~"taxonomy" {print $1}' $OLDFILE > temp.txt #create a temporary working file with 1st col only


### Create baseline
# Maps W3 and W4 to W2 and W1 based on structure and occupancy
rm -f $BASELINE; echo $header > $BASELINE
while IFS= read -r line; do 
echo $line | awk -F'-' '{
    if ($2=="W3")
        print $0","$1"-W2-"$3",1";
    else if ($2=="W4" && ($1=="RES1" || $1=="RES2" ||$1=="RES3A"))
        print $0","$1"-W1-"$3",1";
    else if ($2=="W4")
        print $0","$1"-W2-"$3",1";
    else
        print $0","$0",1";
    }' >> $BASELINE
done < temp.txt
rm -f temp.txt
# checked that this worked using `diff --strip-trailing-cr $BASELINE $OLDFILE`


### Create standard retrofit
# unreinforced masonry has low-code limit, high importance bldgs go to high-code
# all else to mid code
rm -f $R1; touch $R1
while IFS= read -r line; do
echo $line | awk -F'-|,' '{
    if ($1~"taxonomy")
        print $0;
    if ($2~"URM" || $2~"S5" || $2~"C3") 
        print $1"-"$2"-"$3","$4"-"$5"-LC,1";
    else if ($1~"COM6" || $1~"GOV2")
        print $1"-"$2"-"$3","$4"-"$5"-HC,1";
    else if ($3~"HC")
        print $1"-"$2"-"$3","$4"-"$5"-"$6",1";
    else
        print $1"-"$2"-"$3","$4"-"$5"-MC,1";
    }' >> $R1
done < $BASELINE

##### TO DO
# build this for R2 after I hear back from Tuna